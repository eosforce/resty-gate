worker_processes  auto;

daemon off;

error_log  logs/error.log warn;
pid        logs/nginx.pid;

events {
    use epoll;
    worker_connections  1024;
}

# make sure to set plaintext JWT_SECRET environment variable
env JWT_SECRET;

http {
    server_tokens off; # Hide version
    more_set_headers 'Server: EosForce';
    include       mime.types;
    default_type  text/plain;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    #access_log  logs/access.log  main;

    sendfile        on;
    tcp_nopush      on;

    keepalive_disable none; # force all request to use long connection, close action issuse by the client.
    client_body_buffer_size 128k;

    gzip  on;

    lua_package_path "$prefix/resty_modules/lualib/?.lua;;";
    lua_package_cpath "$prefix/resty_modules/lualib/?.so;;";

    lua_shared_dict faucet_limit_req_store 100m;

    resolver 114.114.114.114;

    upstream faucet_servers {
        server localhost:8888;
        keepalive 300;
    }

    upstream nodeos_servers {
        server localhost:8888;
        keepalive 300;
    }

    server {
        listen       80;
        listen       443 ssl http2;
        listen       [::]:443 ssl http2;

        server_name  ssl.eosforce.io;

        access_log off; # logs/access.log

        ssl_certificate          /etc/letsencrypt/live/ssl.eosforce.io/fullchain.pem;
        ssl_certificate_key      /etc/letsencrypt/live/ssl.eosforce.io/privkey.pem;

        ssl_stapling on;
        ssl_trusted_certificate  /etc/letsencrypt/live/ssl.eosforce.io/chain.pem;

        ssl_session_cache    shared:SSL:64m;
        ssl_session_tickets  on;
        ssl_session_timeout  1d;

        ssl_ciphers  HIGH:!aNULL:!MD5;
        ssl_prefer_server_ciphers  on;

        lua_code_cache off;

        location ^~ /.well-known/acme-challenge/ {
            default_type "text/plain";
            root html;
        }

        location ^~ /.well-known {
           access_log           off;
           log_not_found        off;
           autoindex            off;
           root html;
           allow all;
        }

        location / {
            content_by_lua_block {
                ngx.say("Hello, This is resty-gate!")
            }
        }

        # For nodeos RPC API load balance
        location /v1 {
            proxy_pass http://nodeos_servers;
            proxy_http_version 1.1;
            proxy_set_header Connection "";
            proxy_set_header   Host             $host;
            proxy_set_header   X-Real-IP        $remote_addr;
            proxy_set_header   X-Forwarded-For  $proxy_add_x_forwarded_for;
        }

        # For nodeos faucet API load balance
        location /v1/faucet {
            access_by_lua_file src/faucet.lua;
        }

        location @nodeos_faucet {
            proxy_pass http://faucet_servers;
            proxy_http_version 1.1;
            proxy_set_header Connection "";
            proxy_set_header   Host             $host;
            proxy_set_header   X-Real-IP        $remote_addr;
            proxy_set_header   X-Forwarded-For  $proxy_add_x_forwarded_for;
        }

        # For JWT auth APIs
        location /verify {
            access_by_lua_file src/jwt_verify.lua;
            echo "JWT verify passed!";
        }
    }
}
